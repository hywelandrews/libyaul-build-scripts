# -*- mode: shell-script -*-

# Copyright (c) 2012-2016
# See LICENSE for details.
#
# Dave Murphy <davem@devkitpro.org>
# Israel Jacquez <mrkotfw@gmail.com>

[[ "${BASH_SOURCE[0]}" != "${0}" ]] || exit 1

is_var_set "target"

# Build and install Binutils
mkdir -p "${BUILD_SRC_DIR}/${target}/binutils"
cd "${BUILD_SRC_DIR}/${target}/binutils"
binutils_configure_options=(
        --prefix="${BUILD_INSTALL_DIR}/${target}" \
        --target="${target}" \
        --disable-werror \
        --disable-debug \
        --disable-shared \
        --disable-threads \
        --with-gcc \
        --with-gnu-as \
        --with-gnu-ld \
        --with-stabs)
if ! [ -z "${BUILD_HOST}" ]; then
    binutils_configure_options+=(--host="${BUILD_HOST}")
fi
if ! [ -f "${BUILD_STAMPS_DIR}/${target}-configured-binutils" ]; then
    message "Configuring Binutils"
    CFLAGS="" LDFLAGS="" ../"${BINUTILS_SRC_DIR}"/configure \
        ${binutils_configure_options[@]} 1>> "${BUILD_SRC_DIR}/binutils-${target}.log" 2>&1 \
        || panic "See '${BUILD_SRC_DIR}/binutils-${target}.log'" 1
    create_stamp "${target}-configured-binutils"
fi

if ! [ -f "${BUILD_STAMPS_DIR}/${target}-built-binutils" ]; then
    message "Building Binutils"
    "${MAKE}" -j ${BUILD_MAKE_JOBS} 1>> "${BUILD_SRC_DIR}/binutils-${target}.log" 2>&1 || \
        panic "See '${BUILD_SRC_DIR}/binutils-${target}.log'" 1
    create_stamp "${target}-built-binutils"
fi

if ! [ -f "${BUILD_STAMPS_DIR}/${target}-installed-binutils" ]; then
    message "Installing Binutils"
    "${MAKE}" -j ${BUILD_MAKE_JOBS} install 1>> "${BUILD_SRC_DIR}/binutils-${target}.log" 2>&1 || \
        panic "See '${BUILD_SRC_DIR}/binutils-${target}.log'" 1
    create_stamp "${target}-installed-binutils"
fi
create_stamp "${target}-completed-binutils"
cd "${OLDPWD}"


# Build and install just the C compiler
mkdir -p "${BUILD_SRC_DIR}/${target}/gcc"
cd "${BUILD_SRC_DIR}/${target}/gcc"
gcc_configure_options=(
        --prefix="${BUILD_INSTALL_DIR}/${target}" \
        --target="${target}" \
        --program-prefix="${target}-" \
        --with-endian=big \
        --with-cpu=m2 \
        --disable-cld \
        --disable-initfini-array \
        --disable-largefile \
        --disable-hosted-libstdcxx \
        --disable-libstdc__-v3 \
        --disable-libstdcxx-pch \
        --disable-libstdcxx-threads \
        --disable-libstdcxx-time \
        --disable-multilib \
        --disable-objc-gc \
        --disable-rpath \
        --disable-dlopen \
        --disable-shared \
        --disable-threads \
        --disable-tls \
        --disable-win32-registry \
        --disable-decimal-float \
        --disable-frame-pointer \
        --disable-fixed-point \
        --enable-languages=c,c++ \
        --enable-static \
        --disable-fdpic \
        --disable-default-pie \
        --disable-libquadmath \
        --disable-libquadmath-support \
        --disable-libvtv \
        --disable-libgomp \
        --disable-libssp \
        --disable-libada \
        --with-gcc \
        --with-gnu-as \
        --with-gnu-ld \
        --without-dwarf2 \
        --without-headers \
        --without-newlib
        MAKEINFO=missing)
if ! [ -z "${BUILD_HOST}" ]; then
    gcc_configure_options+=(--host="${BUILD_HOST}")
fi
if ! [ -f "${BUILD_STAMPS_DIR}/${target}-configured-gcc" ]; then
    message "Configuring GCC"
    CFLAGS="" \
    LDFLAGS="" \
    CFLAGS_FOR_TARGET="-O2 -m2 -mb -fomit-frame-pointer -ffreestanding" \
    LDFLAGS_FOR_TARGET="" ../"${GCC_SRC_DIR}"/configure \
        ${gcc_configure_options[@]} 1>> "${BUILD_SRC_DIR}/gcc-${target}.log" 2>&1 \
        || panic "See '${BUILD_SRC_DIR}/gcc-${target}.log'" 1
    create_stamp "${target}-configured-gcc"
fi

if ! [ -f "${BUILD_STAMPS_DIR}/${target}-built-gcc" ]; then
    message "Building GCC (all-gcc)"
    "${MAKE}" -j ${BUILD_MAKE_JOBS} all-gcc 1>> "${BUILD_SRC_DIR}/gcc-${target}.log" 2>&1 \
        || panic "See '${BUILD_SRC_DIR}/gcc-${target}.log'" 1
    create_stamp "${target}-built-gcc"
fi

if ! [ -f "${BUILD_STAMPS_DIR}/${target}-installed-gcc" ]; then
    message "Installing GCC (install-gcc)"
    "${MAKE}" -j ${BUILD_MAKE_JOBS} install-gcc 1>> "${BUILD_SRC_DIR}/gcc-${target}.log" 2>&1 \
        || panic "See '${BUILD_SRC_DIR}/gcc-${target}.log'" 1
    create_stamp "${target}-installed-gcc"
fi
unset "CFLAGS"
cd "${OLDPWD}"

# Build and install the final compiler
cd "${BUILD_SRC_DIR}/${target}/gcc"
if ! [ -f "${BUILD_STAMPS_DIR}/${target}-built-g++" ]; then
    message "Building GCC"
    "${MAKE}" -j ${BUILD_MAKE_JOBS} 1>> "${BUILD_SRC_DIR}/gcc-${target}.log" 2>&1 || \
        panic "See '${BUILD_SRC_DIR}/gcc-${target}.log'" 1
    create_stamp "${target}-built-g++"
fi

if ! [ -f "${BUILD_STAMPS_DIR}/${target}-installed-g++" ]; then
    message "Installing GCC"
    ("${MAKE}" -j ${BUILD_MAKE_JOBS} install) 1>> "${BUILD_SRC_DIR}/gcc-${target}.log" 2>&1 || \
        panic "See '${BUILD_SRC_DIR}/gcc-${target}.log'" 1
    create_stamp "${target}-installed-g++"
fi
create_stamp "${target}-completed-gcc"
cd "${OLDPWD}"


# Build and install GDB
if [[ "${OPTION_BUILD_GDB}" == "yes" ]]; then
    mkdir -p "${BUILD_SRC_DIR}/${target}/gdb"
    cd "${BUILD_SRC_DIR}/${target}/gdb"
    if ! [ -f "${BUILD_STAMPS_DIR}/${target}-configured-gdb" ]; then
        message "Configuring GDB"
        CFLAGS="" LDFLAGS="" ../"${GDB_SRC_DIR}"/configure \
            --disable-werror \
            --prefix="${BUILD_INSTALL_DIR}/${target}" \
            --target="${target}" 1>> "${BUILD_SRC_DIR}/gdb-${target}.log" 2>&1 \
            || panic "See '${BUILD_SRC_DIR}/gdb-${target}.log'" 1
        create_stamp "${target}-configured-gdb"
    fi

    if ! [ -f "${BUILD_STAMPS_DIR}/${target}-built-gdb" ]; then
        message "Building GDB"
        "${MAKE}" -j ${BUILD_MAKE_JOBS} 1>> "${BUILD_SRC_DIR}/gdb-${target}.log" 2>&1 || \
            panic "See '${BUILD_SRC_DIR}/gdb-${target}.log'" 1
        create_stamp "${target}-built-gdb"
    fi

    if ! [ -f "${BUILD_STAMPS_DIR}/${target}-installed-gdb" ]; then
        message "Installing GDB"
        "${MAKE}" -j ${BUILD_MAKE_JOBS} install 1>> "${BUILD_SRC_DIR}/gdb-${target}.log" 2>&1 || \
            panic "See '${BUILD_SRC_DIR}/gdb-${target}.log'" 1
        create_stamp "${target}-installed-gdb"
    fi
    create_stamp "${target}-completed-gdb"
    cd "${OLDPWD}"
fi
